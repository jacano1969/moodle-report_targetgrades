{"0000:1": "<html>\n    <head>\n        <link src=\"pastie.css\" type=\"text/css\" rel=\"stylesheet\" />\n        <title>Target Grades - Architecture</title>\n    </head>\n    <body>\n        <h1>Target Grades</h1>\n            <h2>Architecture</h2>\n                <pre>{{ d['filetree.sh|pyg']}}{{ d['filetree.sh|bash']}}</pre>\n                <h3>/</h3>\n                    <p>This folder lives at $CFG->dirroot/admin/report/targetgrades, and contains the majority of the plugin files</p>\n                    <h4>alisdata_form.php</h4>\n                        <p>Defines the form used to upload the CSV files contianing the ALIS statistics</p>\n                    <h4>alisdata.php</h4>\n                        <p>Displays the form defined in alisdata_form.php. Once statistics have been uploaded, lists the statistics along with flags relating to data quality issues, and allows them to be linked to courses.</p>\n                    <h4>lib.php</h4>\n                        <p>This is the plugin's main library. The majority of functions, classes and constants used by this plugin live in here.  Stuff in this file lives under the \\report\\targetgrades <a href=\"http://uk.php.net/manual/en/language.namespaces.php\">namespace</a>.</p>\n                    <h4>settingsform.php</h4>\n                        <p>Defines, displays and processes the settings form.  Most plugin types automatically pick up on fields defined in settings.php and create a form, but report plugins don't seem to do this.  Because this is a bit of a hack, the form is defined and displayed in the same page, rather than the class taking up space in lib.php</p>\n                    <h4>settings.php</h4>\n                        <p>Very simply defines the admin module for this plugin, and adds it to the Settings block under the Grades menu.</p>\n                    <h4>version.php</h4>\n                        <p>Just defines the plugin version number.</p>\n                <h3>/cli/</h3>\n                    <p>Contains bash scripts used to convert PDFs from ALIS to CSV files that can be uploaded to alisdata.php</p>\n                    <h4>alis2009_pdf2csv.sh</h4>\n                        <p>Legacy script for converting ALIS statistics from 2009 from PDF to CSV.</p>\n                    <h4>alis_pdf2csv.sh</h4>\n                        <p>Converts the current PDF from ALIS to a CSV file containing the statistics required to calculate target grades.  Uses pdf2text to extract the tables to text, then uses sed to clean the file and turn it into a nicely delimited flatfile.</p>\n                <h3>/db/</h3>\n                    <p>Contains Moodle standard database files</p>\n                    <h4>access.php</h4>\n                        <p>Defines the report/targetgrades:view and report/targetgrades:distribute capabilities</p>\n                    <h4>install.xml</h4>\n                        <p>Defines the <a href=\"database.html\">database schema</a></p>\n                <h3>/lang/</h3>\n                    <p>Contains Moodle standard language files. Currently only contains English tranlastion.</p>\n    </body>\n</html>"}